{"version":3,"file":"js/217.80bb0f03.js","mappings":"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","sources":["webpack://conradswebsite/./src/views/projects/WeatherView.vue","webpack://conradswebsite/./src/components/WeatherAPI.vue","webpack://conradswebsite/./src/components/WeatherAPI.vue?6ba2","webpack://conradswebsite/./src/views/projects/WeatherView.vue?0faf"],"sourcesContent":["<template>\r\n    <div id=\"app\" style=\"padding-top: 2.8em;\">\r\n      <WeatherAPI></WeatherAPI>\r\n    </div>\r\n  \r\n    \r\n  </template>\r\n  \r\n  <script>\r\n  import WeatherAPI from \"@/components/WeatherAPI.vue\";\r\n  import \"@/assets/globalCSS.css\";\r\n  \r\n\r\n  export default {\r\n    name: \"DatasetsView\",\r\n    components: {\r\n        WeatherAPI\r\n    },\r\n  };\r\n  </script>","<template>\r\n  <!-- this 1st div does a nice background color, and puts padding between this element and the footer-->\r\n  <div style=\"background: linear-gradient(0deg, rgba(1,239,249,1) 0%, rgba(0,112,255,0.5746673669467788) 38%, rgb(11, 87, 208) 78%); \r\n  padding-bottom: 9em;\r\n  \">\r\n    <h1 style=\"padding-top: 1em; padding-bottom: 1em;\">Weather</h1>\r\n    \r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>City / Country / Region</th>\r\n          <th>Sun Rise/Sun Set</th>\r\n          <th>Weather Conditions</th>\r\n          <th>Temperature °C</th>\r\n          <th>Temperature °C (Feels Like)</th>\r\n          <th>Wind Speed</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"cityWeather in cityWeathers\" :key=\"cityWeather.city\">\r\n          <!-- 1 -->\r\n          <td><b>{{ cityWeather.city }}</b>\r\n            <br><br>\r\n            <template v-if=\"cityWeather.weather && cityWeather.weather.request[0].query\">\r\n              <span style=\"color: rgb(0, 149, 255);\">Country:</span> {{\r\n                cityWeather.weather.nearest_area[0].country[0].value }}<br>\r\n              <span style=\"color: rgb(255, 133, 133);\">Region:</span> {{\r\n                cityWeather.weather.nearest_area[0].region[0].value }}<br>\r\n              {{ cityWeather.weather.request[0].query }}<br>\r\n              <div style=\"margin-top: 0.25em;\"><br>\r\n                <span style=\"color: rgb(123, 123, 123);\">Query Date:</span> {{\r\n                  cityWeather.weather.current_condition[0].observation_time }} -\r\n                {{ formatDate(cityWeather.weather.weather[0].date) }}\r\n\r\n              </div>\r\n            </template>\r\n          </td>\r\n          <!-- 2 -->\r\n          <td>\r\n            <template v-if=\"cityWeather.weather && cityWeather.weather.weather[0].astronomy[0].sunrise\">\r\n              <span class=\"sunny-background\">{{ cityWeather.weather.weather[0].astronomy[0].sunrise }} - {{\r\n                cityWeather.weather.weather[0].astronomy[0].sunset }}</span><br>\r\n              Astronomical Sun Hours: <span class=\"sun-hour-background\">{{\r\n                this.calculateDaylightTime(cityWeather.weather.weather[0].astronomy[0].sunrise,\r\n                  cityWeather.weather.weather[0].astronomy[0].sunset) }}</span><br>\r\n              Estimated actual sun hours: <span class=\"sun-hour-background\">{{\r\n                parseInt(cityWeather.weather.weather[0].sunHour) }} hours {{\r\n    (Math.round((cityWeather.weather.weather[0].sunHour -\r\n      parseInt(cityWeather.weather.weather[0].sunHour)) * 60) * 100) / 100 }} minutes</span>\r\n            </template>\r\n            <template v-else>\r\n              N/A\r\n            </template>\r\n          </td>\r\n          <!-- 3 -->\r\n\r\n          <!-- This sets the table cell to have a different color background on a condition  -->\r\n          <td v-bind:class=\"{\r\n            'gray-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Partly cloudy',\r\n            'rain-showers-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Rain shower',\r\n            'overcast-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Overcast',\r\n            'cloudy-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Cloudy',\r\n            'sunny-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Sunny',\r\n            'light-rain-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Light rain',\r\n            'rain-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Rain',\r\n            'clear-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Clear'\r\n          }\">\r\n            <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0]\">\r\n              <div v-if=\"cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Partly cloudy'\">\r\n                {{ cityWeather.weather.current_condition[0].weatherDesc[0].value }}\r\n              </div>\r\n              <div v-else>\r\n                {{ cityWeather.weather.current_condition[0].weatherDesc[0].value }}\r\n              </div>\r\n            </template>\r\n            <template v-else>\r\n              N/A\r\n            </template>\r\n          </td>\r\n          <!-- 5 -->\r\n          <td>\r\n            <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0].temp_C\">\r\n              <div style=\"margin-bottom: 0.25em;\">\r\n                Projected High Today:\r\n                <span class=\"high-temp-text-coloring\">{{ cityWeather.weather.weather[0].maxtempC }}°C&nbsp;{{\r\n                  cityWeather.weather.weather[0].maxtempF }}°F</span><br>\r\n              </div>\r\n              <div style=\"margin-bottom: 0.25em;\">\r\n                Projected Low Today:\r\n                <span class=\"low-temp-text-coloring\">{{ cityWeather.weather.weather[0].mintempC }}°C&nbsp;{{\r\n                  cityWeather.weather.weather[0].mintempF }}°F</span><br>\r\n              </div>\r\n              Recent Temperature: <b>{{ cityWeather.weather.current_condition[0].temp_C }}°C&nbsp;{{\r\n                cityWeather.weather.current_condition[0].temp_F }}°F</b><br><br>\r\n              Humidity: {{ cityWeather.weather.current_condition[0].humidity }}%<br>\r\n              - - - -<br>\r\n              <span class=\"\">\r\n                {{ formatDate(cityWeather.weather.weather[1].date) }}:\r\n                <span class=\"high-temp-text-coloring\">H: {{ cityWeather.weather.weather[1].maxtempC }}°C&nbsp;{{\r\n                  cityWeather.weather.weather[1].maxtempF }}°F</span> <span class=\"low-temp-text-coloring\">L: {{ cityWeather.weather.weather[1].mintempC }}°C</span><br>\r\n              </span>- - - -<br>\r\n              <span class=\"\">\r\n                {{ formatDate(cityWeather.weather.weather[2].date) }}:\r\n                <span class=\"high-temp-text-coloring\">H: {{ cityWeather.weather.weather[2].maxtempC }}°C&nbsp;{{\r\n                  cityWeather.weather.weather[2].maxtempF }}°F</span> <span class=\"low-temp-text-coloring\">L: {{ cityWeather.weather.weather[2].mintempC }}°C</span><br>\r\n              </span>\r\n\r\n\r\n            </template>\r\n            <template v-else>\r\n              N/A\r\n            </template>\r\n          </td>\r\n          <!-- 6 -->\r\n          <td>\r\n            <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0]\">\r\n              {{ cityWeather.weather.current_condition[0].FeelsLikeC }}°C<br>\r\n              {{ cityWeather.weather.current_condition[0].FeelsLikeF }}°F\r\n            </template>\r\n            <template v-else>\r\n              N/A\r\n            </template>\r\n          </td>\r\n          <!-- 7 -->\r\n          <td>\r\n            <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0]\">\r\n              {{ cityWeather.weather.current_condition[0].windspeedKmph }} km/h\r\n            </template>\r\n            <template v-else>\r\n              N/A\r\n            </template>\r\n          </td>\r\n          <!-- 8 -->\r\n\r\n\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p class=\"white-color-text\"> All the locations here are easily customizable! Data is queried as JSON\r\n      using <a class=\"text-links\" href=\"https://github.com/chubin/wttr.in\">https://github.com/chubin/wttr.in</a>,\r\n      then formatted and displayed here in a custom made table.</p>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cityWeathers: [\r\n        //{ city: \"Death Valley, CA\", weather: \"\" },\r\n        { city: \"Tübingen, Germany\", weather: \"\" },\r\n        { city: \"STR, Stuttgart Airport, Germany\", weather: \"\" },\r\n        { city: \"Cary, NC\", weather: \"\" },\r\n        { city: \"Wilmington, NC\", weather: \"\" },\r\n        { city: \"Albuquerque, New Mexico\", weather: \"\" },\r\n        { city: \"Shamokin, PA\", weather: \"\" },\r\n        { city: \"Temecula, CA\", weather: \"\" },\r\n        { city: \"Albany WA, Australia\", weather: \"\" },\r\n        { city: \"RDU, Raleigh Durham Airport, USA\", weather: \"\" },\r\n        { city: \"Uppsala, Sweden\", weather: \"\" },\r\n        { city: \"Miami, Florida\", weather: \"\" },\r\n        { city: \"Madrid\", weather: \"\" },\r\n        { city: \"Helsinki\", weather: \"\" },\r\n\r\n      ],\r\n      jsonData: null,\r\n      regularText: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchWeather();\r\n  },\r\n  methods: {\r\n    fetchWeather() {\r\n      this.cityWeathers.forEach((cityWeather) => {\r\n        const url = `https://wttr.in/${cityWeather.city}?format=j1`;\r\n        //const regularURL = 'https://wttr.in/tuebingen'\r\n        fetch(url)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            cityWeather.weather = data;\r\n            this.jsonData = data;\r\n          })\r\n          .catch((error) => {\r\n            // error handling\r\n            this.jsonData = { data: { error: [{ msg: \"Unknown error occurred.\" + error }] } };\r\n          });\r\n\r\n        // optional regular text\r\n        /*\r\n        fetch(regularURL)\r\n        .then((response) => response.text())\r\n        .then((data3) => {\r\n         \r\n          this.regularText = data3;\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Error fetching weather for regularURL`, error);\r\n        });\r\n        */\r\n      });\r\n    },\r\n    calculateDaylightTime(startTime, endTime) {\r\n      const startDate = new Date(`2023/01/01 ${startTime}`);\r\n      const endDate = new Date(`2023/01/01 ${endTime}`);\r\n      const daylightTime = (endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60);\r\n      const hours = Math.floor(daylightTime);\r\n      const minutes = Math.floor((daylightTime - hours) * 60);\r\n      return `${hours} hours ${minutes} minutes`;\r\n    },\r\n    formatDate(convertDate) {\r\n      // const date takes string in format of 2021-05-18\r\n      const date = new Date(convertDate);\r\n      const options = { weekday: 'long', month: 'long', day: 'numeric' };\r\n      const formattedDate = date.toLocaleDateString('en-US', options);\r\n\r\n      return formattedDate;\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n/* Table */\r\ntable {\r\n  padding: 0 0.5em 0 0.5em;\r\n  width: 100%;\r\n  border-collapse: separate;\r\n  margin-bottom: 1em;\r\n  \r\n\r\n}\r\n\r\n/* Table border radius with CSS only https://stackoverflow.com/questions/4932181/rounded-table-corners-css-only 3rd answer */\r\nth:first-of-type {\r\n  border-top-left-radius: 10px;\r\n}\r\nth:last-of-type {\r\n  border-top-right-radius: 10px;\r\n}\r\ntr:last-of-type td:first-of-type {\r\n  border-bottom-left-radius: 10px;\r\n}\r\ntr:last-of-type td:last-of-type {\r\n  border-bottom-right-radius: 10px;\r\n}\r\n\r\n/* Table Header */\r\nthead {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\nth {\r\n  padding-right: 0em;\r\n  padding-left: 0.5em;\r\n  padding-top: 0.5em;\r\n  padding-bottom: 0.5em;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\n/* Table Body */\r\ntbody {\r\n  background-color: #ffffff;\r\n}\r\n\r\ntd {\r\n  text-align: left;\r\n\r\n  border-bottom: 1px solid #ddd;\r\n  border-right: 1px solid #ddd;\r\n\r\n  padding-left: 0.5em;\r\n  padding-top: 0.5em;\r\n  padding-bottom: 0.5em;\r\n}\r\n\r\n/* Alternate Row Color \r\ntr:nth-child(even) {\r\n  background-color: #ededed96;\r\n}\r\n*/\r\n\r\n.high-temp-text-coloring {\r\n  color: #000;\r\n  padding: 3px;\r\n  background-color: #ff803b;\r\n  border-radius: 0.2em;\r\n}\r\n\r\n.low-temp-text-coloring {\r\n  color: #ffffff;\r\n  padding: 3px;\r\n  background-color: #2b1cfc;\r\n  border-radius: 0.2em;\r\n}\r\n\r\n.high-temp-text-coloring-1 {\r\n  color: #000;\r\n  padding-right: 0.1em;\r\n  padding-left: 0.1em;\r\n  background-color: #e0ffcd;\r\n  border-radius: 0.2em;\r\n}\r\n\r\n.high-temp-text-coloring-2 {\r\n  color: #000;\r\n  padding-right: 0.1em;\r\n  padding-left: 0.1em;\r\n  background-color: #e0ffcd;\r\n  border-radius: 0.2em;\r\n}\r\n\r\n\r\n.gray-background {\r\n  background: linear-gradient(to left, #ffffff 50%, #e1e1e1 50%);\r\n}\r\n\r\n.rain-background {\r\n  background: #8aa9ff;\r\n}\r\n\r\n.rain-showers-background {\r\n  background: linear-gradient(to left, #ffffff 50%, #8aa9ff 50%);\r\n}\r\n\r\n.light-rain-background {\r\n  background: linear-gradient(to left, #ffffff 75%, #8aa9ff 25%);\r\n}\r\n\r\n.overcast-background {\r\n  background: #e1e1e1;\r\n}\r\n\r\n.cloudy-background {\r\n  background: #e1e1e1;\r\n}\r\n\r\n.sunny-background {\r\n  background: #fef88b;\r\n}\r\n\r\n.clear-background {\r\n  background: #272727;\r\n  color: white;\r\n}\r\n\r\n.sun-hour-background {\r\n\r\n  text-decoration: underline;\r\n  padding: 0.1em;\r\n  border-radius: 0.3em;\r\n}\r\n\r\n\r\n@media (max-width: 768px) {\r\n  table {\r\n    font-size: 0.7em;\r\n    padding: 0.25em;\r\n  }\r\n\r\n  .responsive-link {\r\n    display: block;\r\n  }\r\n\r\n}</style>","import { render } from \"./WeatherAPI.vue?vue&type=template&id=3d300e4b&scoped=true\"\nimport script from \"./WeatherAPI.vue?vue&type=script&lang=js\"\nexport * from \"./WeatherAPI.vue?vue&type=script&lang=js\"\n\nimport \"./WeatherAPI.vue?vue&type=style&index=0&id=3d300e4b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3d300e4b\"]])\n\nexport default __exports__","import { render } from \"./WeatherView.vue?vue&type=template&id=7bb87268\"\nimport script from \"./WeatherView.vue?vue&type=script&lang=js\"\nexport * from \"./WeatherView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","style","_createElementBlock","_hoisted_1","_createVNode","_component_WeatherAPI","_createElementVNode","class","href","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","cityWeathers","cityWeather","key","city","_toDisplayString","_hoisted_4","_hoisted_5","weather","request","query","_hoisted_6","nearest_area","country","value","_hoisted_7","_hoisted_8","region","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","current_condition","observation_time","$options","formatDate","date","astronomy","sunrise","_hoisted_14","sunset","_hoisted_15","_hoisted_16","calculateDaylightTime","_hoisted_17","_hoisted_18","parseInt","sunHour","Math","round","_normalizeClass","weatherDesc","_hoisted_19","_hoisted_20","temp_C","_hoisted_21","_hoisted_22","maxtempC","maxtempF","_hoisted_23","_hoisted_24","_hoisted_25","mintempC","mintempF","_hoisted_26","temp_F","_hoisted_27","_hoisted_28","humidity","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","FeelsLikeC","_hoisted_40","FeelsLikeF","windspeedKmph","_hoisted_41","data","jsonData","regularText","mounted","this","fetchWeather","methods","forEach","url","fetch","then","response","json","catch","error","msg","startTime","endTime","startDate","Date","endDate","daylightTime","getTime","hours","floor","minutes","convertDate","options","weekday","month","day","formattedDate","toLocaleDateString","__exports__","name","components","WeatherAPI","render"],"sourceRoot":""}