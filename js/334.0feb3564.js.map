{"version":3,"file":"js/334.0feb3564.js","mappings":"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","sources":["webpack://conradswebsite/./src/views/projects/WeatherView.vue","webpack://conradswebsite/./src/components/WeatherAPI.vue","webpack://conradswebsite/./src/components/WeatherAPI.vue?6ba2","webpack://conradswebsite/./src/views/projects/WeatherView.vue?0faf"],"sourcesContent":["<template>\r\n    <div id=\"app\">\r\n      <WeatherAPI></WeatherAPI>\r\n    </div>\r\n  \r\n    \r\n  </template>\r\n  \r\n  <script>\r\n  import WeatherAPI from \"@/components/WeatherAPI.vue\";\r\n  import \"@/assets/globalCSS.css\";\r\n  \r\n\r\n  export default {\r\n    name: \"DatasetsView\",\r\n    components: {\r\n        WeatherAPI\r\n    },\r\n  };\r\n  </script>","<template>\r\n  <!-- this 1st div does a nice background color, and puts padding between this element and the footer-->\r\n  <div class=\"weather-background\">\r\n    <h1 style=\"padding-top: 1em; padding-bottom: 1em; color: #ffffff; font-size: 5em;\">Weather</h1>\r\n    <div class=\"center-content\">\r\n\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>City / Country / Region</th>\r\n            <th>Sun Rise/Sun Set</th>\r\n            <th>Weather Conditions</th>\r\n            <th>High/Low °C</th>\r\n            <th>°C</th>\r\n            <th>Wind Speed</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"cityWeather in cityWeathers\" :key=\"cityWeather.city\">\r\n            <!-- 1 -->\r\n            <td class=\"weather-location\"><b><u>{{ cityWeather.city }}</u></b>\r\n              <br><br>\r\n              <template v-if=\"cityWeather.weather && cityWeather.weather.request[0].query\">\r\n                <span\r\n                  style=\"color: rgb(0, 149, 255); font-weight: 600; background: rgb(240, 240, 240); border: 1px solid rgb(227, 227, 227); padding: 0.2rem 0.4rem; border-radius: 4px;\">Country:</span>\r\n                {{\r\n                  cityWeather.weather.nearest_area[0].country[0].value }}<br>\r\n                <span style=\"color: rgb(255, 133, 133); font-weight: 600; background: rgb(240, 240, 240); border: 1px solid rgb(227, 227, 227); padding: 0.2rem 0.4rem; border-radius: 4px;\r\n                \">Region:</span> {{\r\n                  cityWeather.weather.nearest_area[0].region[0].value }}<br>\r\n                {{ cityWeather.weather.request[0].query }}<br>\r\n                <div style=\"margin-top: 0.25em;\"><br>\r\n                  <span style=\"color: rgb(123, 123, 123);\">Query Date:</span> {{\r\n                    cityWeather.weather.current_condition[0].observation_time }} -\r\n                  {{ formatDate(cityWeather.weather.weather[0].date) }}\r\n\r\n                </div>\r\n              </template>\r\n            </td>\r\n            <!-- 2 -->\r\n            <td>\r\n              <template v-if=\"cityWeather.weather && cityWeather.weather.weather[0].astronomy[0].sunrise\">\r\n                <span class=\"sunny-background\">{{ cityWeather.weather.weather[0].astronomy[0].sunrise }} - {{\r\n                  cityWeather.weather.weather[0].astronomy[0].sunset }}</span><br>\r\n                Astronomical Sun Hours: <span class=\"sun-hour-background\">{{\r\n                  this.calculateDaylightTime(cityWeather.weather.weather[0].astronomy[0].sunrise,\r\n                    cityWeather.weather.weather[0].astronomy[0].sunset) }}</span><br>\r\n                Estimated actual sun hours: <span class=\"sun-hour-background\">{{\r\n                  parseInt(cityWeather.weather.weather[0].sunHour) }} hours {{\r\n    (Math.round((cityWeather.weather.weather[0].sunHour -\r\n      parseInt(cityWeather.weather.weather[0].sunHour)) * 60) * 100) / 100 }} minutes</span>\r\n              </template>\r\n              <template v-else>\r\n                N/A\r\n              </template>\r\n            </td>\r\n            <!-- 3 -->\r\n\r\n            <!-- This sets the table cell to have a different color background on a condition  -->\r\n            <td v-bind:class=\"{\r\n              'gray-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Partly cloudy',\r\n              'rain-showers-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Rain shower',\r\n              'overcast-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Overcast',\r\n              'cloudy-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Cloudy',\r\n              'sunny-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Sunny',\r\n              'light-rain-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Light rain',\r\n              'rain-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Rain',\r\n              'clear-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Clear'\r\n            }\">\r\n              <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0]\">\r\n                <div v-if=\"cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Partly cloudy'\">\r\n                  {{ cityWeather.weather.current_condition[0].weatherDesc[0].value }}\r\n                </div>\r\n                <div v-else>\r\n                  {{ cityWeather.weather.current_condition[0].weatherDesc[0].value }}\r\n                </div>\r\n              </template>\r\n              <template v-else>\r\n                N/A\r\n              </template>\r\n            </td>\r\n            <!-- 5 -->\r\n\r\n            <td>\r\n\r\n              <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0].temp_C\">\r\n                \r\n                {{ formatDate(cityWeather.weather.weather[0].date) }}\r\n                <span class=\"high-temp-text-coloring\">{{ cityWeather.weather.weather[0].maxtempC }}°C&nbsp;\r\n                  {{ cityWeather.weather.weather[0].maxtempF }}°F</span>\r\n                <span class=\"low-temp-text-coloring\">{{ cityWeather.weather.weather[0].mintempC }}°C&nbsp;{{\r\n                  cityWeather.weather.weather[0].mintempF }}°F</span>\r\n                \r\n\r\n                <div>\r\n                  <span class=\"\">\r\n                    {{ formatDate(cityWeather.weather.weather[1].date) }}:\r\n                    <span class=\"high-temp-text-coloring\">H: {{ cityWeather.weather.weather[1].maxtempC }}°C&nbsp;{{\r\n                      cityWeather.weather.weather[1].maxtempF }}°F</span> <span class=\"low-temp-text-coloring\">L: {{\r\n                      cityWeather.weather.weather[1].mintempC }}°C</span><br>\r\n                  </span>\r\n                </div>\r\n                <span>\r\n                  {{ formatDate(cityWeather.weather.weather[2].date) }}:\r\n                  <span class=\"high-temp-text-coloring\">H: {{ cityWeather.weather.weather[2].maxtempC }}°C&nbsp;{{\r\n                    cityWeather.weather.weather[2].maxtempF }}°F</span> <span class=\"low-temp-text-coloring\">L: {{\r\n                    cityWeather.weather.weather[2].mintempC }}°C</span><br>\r\n                </span>\r\n\r\n\r\n              </template>\r\n              <template v-else>\r\n                N/A\r\n\r\n              </template>\r\n\r\n            </td>\r\n\r\n            <!-- 6 -->\r\n            <td class=\"feels-like-temperature-color\">\r\n              <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0]\">\r\n                <div>\r\n                  Most recent:&nbsp;<b> {{ cityWeather.weather.current_condition[0].temp_C }}°C&nbsp;{{\r\n                    cityWeather.weather.current_condition[0].temp_F }}°F</b>\r\n                  Humidity: {{ cityWeather.weather.current_condition[0].humidity }}%<br>\r\n                </div>\r\n                Feels like:\r\n                {{ cityWeather.weather.current_condition[0].FeelsLikeC }}°C\r\n                {{ cityWeather.weather.current_condition[0].FeelsLikeF }}°F\r\n                \r\n              </template>\r\n              \r\n              <template v-else>\r\n                N/A\r\n              </template>\r\n            </td>\r\n            <!-- 7 -->\r\n            <td>\r\n              <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0]\">\r\n                {{ cityWeather.weather.current_condition[0].windspeedKmph }} km/h\r\n              </template>\r\n              <template v-else>\r\n                N/A\r\n              </template>\r\n            </td>\r\n            <!-- 8 -->\r\n\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <p class=\"white-color-text\"> All the locations here are easily customizable! Data is queried as JSON\r\n      using <a class=\"text-links\" href=\"https://github.com/chubin/wttr.in\">https://github.com/chubin/wttr.in</a>,\r\n      then formatted and displayed here in a custom made table.</p>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cityWeathers: [\r\n        //{ city: \"Death Valley, CA\", weather: \"\" },\r\n        { city: \"Tübingen, Germany\", weather: \"\" },\r\n        { city: \"STR, Stuttgart Airport, Germany\", weather: \"\" },\r\n        { city: \"Cary, NC\", weather: \"\" },\r\n        //{ city: \"Wilmington, NC\", weather: \"\" },\r\n        //{ city: \"Albuquerque, New Mexico\", weather: \"\" },\r\n        //{ city: \"Shamokin, PA\", weather: \"\" },\r\n        //{ city: \"Temecula, CA\", weather: \"\" },\r\n        // { city: \"Albany WA, Australia\", weather: \"\" },\r\n        //{ city: \"RDU, Raleigh Durham Airport, USA\", weather: \"\" },\r\n        { city: \"Uppsala, Sweden\", weather: \"\" },\r\n        { city: \"Miami, Florida\", weather: \"\" },\r\n        //{ city: \"Madrid\", weather: \"\" },\r\n        //{ city: \"Helsinki\", weather: \"\" },\r\n\r\n      ],\r\n      jsonData: null,\r\n      regularText: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchWeather();\r\n  },\r\n  methods: {\r\n    fetchWeather() {\r\n      this.cityWeathers.forEach((cityWeather) => {\r\n        const url = `https://wttr.in/${cityWeather.city}?format=j1`;\r\n        //const regularURL = 'https://wttr.in/tuebingen'\r\n        fetch(url)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            cityWeather.weather = data;\r\n            this.jsonData = data;\r\n          })\r\n          .catch((error) => {\r\n            // error handling\r\n            this.jsonData = { data: { error: [{ msg: \"Unknown error occurred.\" + error }] } };\r\n          });\r\n\r\n        // optional regular text\r\n        /*\r\n        fetch(regularURL)\r\n        .then((response) => response.text())\r\n        .then((data3) => {\r\n         \r\n          this.regularText = data3;\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Error fetching weather for regularURL`, error);\r\n        });\r\n        */\r\n      });\r\n    },\r\n    calculateDaylightTime(startTime, endTime) {\r\n      const startDate = new Date(`2023/01/01 ${startTime}`);\r\n      const endDate = new Date(`2023/01/01 ${endTime}`);\r\n      const daylightTime = (endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60);\r\n      const hours = Math.floor(daylightTime);\r\n      const minutes = Math.floor((daylightTime - hours) * 60);\r\n      return `${hours} hours ${minutes} minutes`;\r\n    },\r\n    formatDate(convertDate) {\r\n      // const date takes string in format of 2021-05-18\r\n      const date = new Date(convertDate);\r\n      const options = { weekday: 'long', month: 'long', day: 'numeric' };\r\n      const formattedDate = date.toLocaleDateString('en-US', options);\r\n      return formattedDate;\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n/* The right padding forces it into the center */\r\n\r\n.weather-background {\r\n  background-image: url('../images/blue_sky2.jpg');\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  background-blend-mode: multiply;\r\n  background-attachment: fixed;\r\n}\r\n\r\n.center-content {\r\n  padding-left: 0.5em;\r\n  padding-right: 0.5em;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* Table */\r\ntable {\r\n  border-collapse: collapse;\r\n  margin-bottom: 1em;\r\n  border: none;\r\n}\r\n\r\n/* Table border radius with CSS only https://stackoverflow.com/questions/4932181/rounded-table-corners-css-only 3rd answer */\r\nth:first-of-type {\r\n  border-top-left-radius: 10px;\r\n}\r\n\r\nth:last-of-type {\r\n  border-top-right-radius: 10px;\r\n}\r\n\r\ntr:last-of-type td:first-of-type {\r\n  border-bottom-left-radius: 10px;\r\n\r\n}\r\n\r\ntr:last-of-type td:last-of-type {\r\n  border-bottom-right-radius: 10px;\r\n}\r\n\r\n/* Table Header */\r\nthead {\r\n  background-color: #ffffff;\r\n\r\n}\r\n\r\nth {\r\n  padding: 0.5em;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\nth:last-child {\r\n  border-right: none;\r\n}\r\n\r\n/* Table Body */\r\ntbody {\r\n  background-color: #ffffff;\r\n}\r\n\r\ntd {\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n\r\n  padding: 0.5em;\r\n}\r\n\r\n/* Alternate Row Color \r\ntr:nth-child(even) {\r\n  background-color: #ededed96;\r\n}\r\n*/\r\n\r\n.high-temp-text-coloring {\r\n  color: #000;\r\n  padding: 3px;\r\n  background-color: #ff9a9a;\r\n  border-radius: 0.2em;\r\n}\r\n\r\n.low-temp-text-coloring {\r\n  color: #ffffff;\r\n  padding: 3px;\r\n  background-color: #a8a2ff;\r\n  border-radius: 0.2em;\r\n}\r\n\r\n.feels-like-temperature-color {\r\n  background: rgb(206, 255, 206);\r\n  text-align: center;\r\n}\r\n\r\n.weather-location {\r\n  background: rgb(231, 250, 255);\r\n}\r\n\r\n.temperature-grid-weather {\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: 1fr;\r\n  grid-gap: 0em;\r\n}\r\n\r\n\r\n.gray-background {\r\n  background: linear-gradient(to left, #ffffff 50%, #e1e1e1 50%);\r\n}\r\n\r\n.rain-background {\r\n  background: #8aa9ff;\r\n}\r\n\r\n.rain-showers-background {\r\n  background: linear-gradient(to left, #ffffff 50%, #8aa9ff 50%);\r\n}\r\n\r\n.light-rain-background {\r\n  background: linear-gradient(to left, #ffffff 75%, #8aa9ff 25%);\r\n}\r\n\r\n.overcast-background {\r\n  background: #e1e1e1;\r\n}\r\n\r\n.cloudy-background {\r\n  background: #e1e1e1;\r\n}\r\n\r\n.sunny-background {\r\n  background: linear-gradient(to bottom, rgb(255, 255, 255) 50%, #b8f0ff 100%);\r\n\r\n  padding: 0.25em;\r\n}\r\n\r\n.clear-background {\r\n  background: #272727;\r\n  color: white;\r\n}\r\n\r\n.sun-hour-background {\r\n\r\n  text-decoration: underline;\r\n  padding: 0.1em;\r\n  border-radius: 0.3em;\r\n}\r\n\r\n\r\n@media (max-width: 768px) {\r\n\r\n  table {\r\n    font-size: 0.6em;\r\n    padding: 0.1em;\r\n  }\r\n\r\n\r\n\r\n}</style>","import { render } from \"./WeatherAPI.vue?vue&type=template&id=dfb0833a&scoped=true\"\nimport script from \"./WeatherAPI.vue?vue&type=script&lang=js\"\nexport * from \"./WeatherAPI.vue?vue&type=script&lang=js\"\n\nimport \"./WeatherAPI.vue?vue&type=style&index=0&id=dfb0833a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dfb0833a\"]])\n\nexport default __exports__","import { render } from \"./WeatherView.vue?vue&type=template&id=1a1821ec\"\nimport script from \"./WeatherView.vue?vue&type=script&lang=js\"\nexport * from \"./WeatherView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_WeatherAPI","class","_createElementVNode","style","href","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","cityWeathers","cityWeather","key","city","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","weather","request","query","_hoisted_8","nearest_area","country","value","_hoisted_9","_hoisted_10","region","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","current_condition","observation_time","$options","formatDate","date","astronomy","sunrise","_hoisted_16","sunset","_hoisted_17","_hoisted_18","calculateDaylightTime","_hoisted_19","_hoisted_20","parseInt","sunHour","Math","round","_normalizeClass","weatherDesc","_hoisted_21","_hoisted_22","temp_C","_hoisted_23","maxtempC","maxtempF","_hoisted_24","mintempC","mintempF","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","temp_F","humidity","_hoisted_33","FeelsLikeC","FeelsLikeF","windspeedKmph","_hoisted_34","data","jsonData","regularText","mounted","this","fetchWeather","methods","forEach","url","fetch","then","response","json","catch","error","msg","startTime","endTime","startDate","Date","endDate","daylightTime","getTime","hours","floor","minutes","convertDate","options","weekday","month","day","formattedDate","toLocaleDateString","__exports__","name","components","WeatherAPI","render"],"sourceRoot":""}