{"version":3,"file":"js/650.85e2e108.js","mappings":"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","sources":["webpack://conradswebsite/./node_modules/prismjs/components/prism-rust.min.js","webpack://conradswebsite/./src/views/projects/RustWebAssemblyView.vue","webpack://conradswebsite/./src/views/projects/RustWebAssemblyView.vue?6609"],"sourcesContent":["!function(e){for(var a=\"/\\\\*(?:[^*/]|\\\\*(?!/)|/(?!\\\\*)|<self>)*\\\\*/\",t=0;t<2;t++)a=a.replace(/<self>/g,(function(){return a}));a=a.replace(/<self>/g,(function(){return\"[^\\\\s\\\\S]\"})),e.languages.rust={comment:[{pattern:RegExp(\"(^|[^\\\\\\\\])\"+a),lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,greedy:!0},char:{pattern:/b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,greedy:!0},attribute:{pattern:/#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,greedy:!0,alias:\"attr-name\",inside:{string:null}},\"closure-params\":{pattern:/([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,lookbehind:!0,greedy:!0,inside:{\"closure-punctuation\":{pattern:/^\\||\\|$/,alias:\"punctuation\"},rest:null}},\"lifetime-annotation\":{pattern:/'\\w+/,alias:\"symbol\"},\"fragment-specifier\":{pattern:/(\\$\\w+:)[a-z]+/,lookbehind:!0,alias:\"punctuation\"},variable:/\\$\\w+/,\"function-definition\":{pattern:/(\\bfn\\s+)\\w+/,lookbehind:!0,alias:\"function\"},\"type-definition\":{pattern:/(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,lookbehind:!0,alias:\"class-name\"},\"module-declaration\":[{pattern:/(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,lookbehind:!0,alias:\"namespace\"},{pattern:/(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,lookbehind:!0,alias:\"namespace\",inside:{punctuation:/::/}}],keyword:[/\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,/\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/],function:/\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,macro:{pattern:/\\b\\w+!/,alias:\"property\"},constant:/\\b[A-Z_][A-Z_\\d]+\\b/,\"class-name\":/\\b[A-Z]\\w*\\b/,namespace:{pattern:/(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,inside:{punctuation:/::/}},number:/\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,boolean:/\\b(?:false|true)\\b/,punctuation:/->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,operator:/[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/},e.languages.rust[\"closure-params\"].inside.rest=e.languages.rust,e.languages.rust.attribute.inside.string=e.languages.rust.string}(Prism);","\r\n<template>\r\n  <div class=\"background-color\" style=\"padding-top: 3em;\">\r\n    <p class=\"paragraph-text\" style=\"text-align: left; font-size: 1.5em;\">\r\n      This page is a work in progress. \r\n      <br>\r\n      <br>      \r\n      I am currently working on a project that uses Rust with Web Assembly to compile the logic of a web program and I will be updating this page with more information \r\n    soon! Click the button below to run the Rust code. If you roll 75 or higher, you should drink more coffee. If you roll below 75, you should drink carbonated water instead!\r\n    Adding more soon!</p>\r\n  </div>\r\n  <div class=\"button-area\">\r\n    <button class=\"button-35\"  @click=\"runRust\">Run Rust</button>\r\n  </div>\r\n  \r\n  <div style=\"font-size: 1.5em;\" id=\"greeting\"></div>\r\n  <pre v-bind:class=\"'language-rust'\"><code>\r\n/* The #[wasm_bindgen] attribute is a macro in Rust that is used to generate JavaScript bindings for Rust functions and types. */  \r\n#[wasm_bindgen]\r\npub fn greet(name: &str) -> String {\r\n    /* The `thread_rng` function is part of the Rust `rand` crate, which provides utilities for generating random numbers and other random data. \r\n    The `thread_rng` function creates a new instance of the `ThreadRng` type, which is a random number generator that is safe to use in a multi-threaded context. */\r\n    let mut rng = thread_rng();\r\n    // generates a random number between 1 and 100 inclusive (can be 1 or 100 too!)\r\n    let random_number = rng.gen_range(1..=100);\r\n    \r\n        if random_number >= 75 {\r\n            return format!(\"{name} {random_number}/100 Coffee is good, time to drink more coffee!\");\r\n        } else {\r\n            return format!(\"{name} {random_number}/100 Seems you may have had too much coffee today, drink carbonated water instead!\");\r\n        }    \r\n    }   \r\n</code></pre>\r\n<p class=\"paragraph-text\">Enter some strings separated by spaces e.g. \r\n  'tree beach house car' and they will be randomized using Rust Web Assembly as you type them in! Amazing!<br>\r\n   Oddly, every new character addition or deletion is shuffling the array using Rust Web Assembly code. Yes, spaces \r\n  count as characters, and nothing can logically be shuffled until there are two tokens with a space between them!</p>\r\n    <label for=\"name\">Write stuff here:</label>\r\n    <input style=\"width: 350px; font-size: 1.5em;\" type=\"text\" id=\"name\" v-model=\"name\">\r\n    \r\n    <p class=\"paragraph-text\">What you typed: {{ name }}{{runRustArrayRandomizer()}}</p>\r\n    <div style=\"font-size: 1.5em; text-align: center; padding-left: 1em; padding-right: 1em; padding-bottom: 2em;\" id=\"randomizedArray\"></div>\r\n    \r\n  <FirstFooter></FirstFooter>\r\n</template>\r\n  \r\n<script>\r\n\r\nimport \"@/assets/globalCSS.css\";\r\nimport FirstFooter from \"@/components/FirstFooter.vue\";\r\nimport Prism from \"prismjs\";\r\nimport 'prismjs/themes/prism.css';\r\nimport 'prismjs/components/prism-rust.min.js';\r\n// import rust web assembly .js file\r\nimport init, {greet, main} from \"@/rust_web_assembly/hello_wasm.js\";\r\n\r\nexport default {\r\n  name: 'rustWebAssemblyView',\r\n  components: {\r\n    FirstFooter,\r\n  },\r\n  data() {\r\n    return {      \r\n      name: \"\",\r\n      inputString: \"Hello, it is a beautiful day isn't it?\",\r\n    };\r\n  },\r\n  mounted() {\r\n      Prism.highlightAll();\r\n    },\r\n  methods: {\r\n  addLettersIntoInput(){\r\n    let i = 0;\r\nconst intervalId = setInterval(() => {\r\n  if (i < this.inputString.length) {\r\n    this.name += this.inputString[i];\r\n    i++;\r\n  } else {\r\n    clearInterval(intervalId);\r\n  }\r\n}, 200);\r\n  },\r\n  runRust(){\r\n    init().then(() => {\r\n        const greeting = greet(\"You rolled:\");\r\n        document.getElementById(\"greeting\").textContent = greeting;\r\n      });\r\n  },\r\n  runRustArrayRandomizer(){\r\n    init().then(() => {\r\n        const arr = this.name.split(\" \");\r\n        let mainFunction = main(arr);\r\n        /*\r\n        let outputArray = []\r\n        for (let i = 0; i < mainFunction.length; i++) {\r\n          outputArray.push(mainFunction[i]);\r\n        }\r\n        */\r\n        // add spaces\r\n        mainFunction = mainFunction.join(\" \");\r\n        console.log(typeof mainFunction);\r\n        document.getElementById(\"randomizedArray\").textContent = mainFunction;\r\n      });\r\n  }\r\n\r\n  }\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n\r\n.button-area{ \r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 2em;\r\n}\r\n</style>","import { render } from \"./RustWebAssemblyView.vue?vue&type=template&id=c924adb2&scoped=true\"\nimport script from \"./RustWebAssemblyView.vue?vue&type=script&lang=js\"\nexport * from \"./RustWebAssemblyView.vue?vue&type=script&lang=js\"\n\nimport \"./RustWebAssemblyView.vue?vue&type=style&index=0&id=c924adb2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c924adb2\"]])\n\nexport default __exports__"],"names":["e","a","t","replace","languages","rust","comment","pattern","RegExp","lookbehind","greedy","string","char","attribute","alias","inside","rest","variable","punctuation","keyword","function","macro","constant","namespace","number","boolean","operator","Prism","_createElementVNode","class","style","id","_normalizeClass","for","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","runRust","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","type","$data","name","$event","_hoisted_7","_toDisplayString","runRustArrayRandomizer","_hoisted_8","_createVNode","_component_FirstFooter","components","FirstFooter","data","inputString","mounted","methods","addLettersIntoInput","i","intervalId","setInterval","this","length","clearInterval","init","then","greeting","greet","document","getElementById","textContent","arr","split","mainFunction","main","join","console","log","__exports__","render"],"sourceRoot":""}