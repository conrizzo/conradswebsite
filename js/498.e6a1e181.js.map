{"version":3,"file":"js/498.e6a1e181.js","mappings":"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","sources":["webpack://conradswebsite/./src/views/projects/WeatherView.vue","webpack://conradswebsite/./src/components/WeatherAPI.vue","webpack://conradswebsite/./src/components/WeatherAPI.vue?6ba2","webpack://conradswebsite/./src/views/projects/WeatherView.vue?0faf"],"sourcesContent":["<template>\r\n    <div id=\"app\">\r\n      <WeatherAPI></WeatherAPI>\r\n    </div>\r\n  \r\n    \r\n  </template>\r\n  \r\n  <script>\r\n  import WeatherAPI from \"@/components/WeatherAPI.vue\";\r\n  import \"@/assets/globalCSS.css\";\r\n  \r\n\r\n  export default {\r\n    name: \"DatasetsView\",\r\n    components: {\r\n        WeatherAPI\r\n    },\r\n  };\r\n  </script>","<template>\r\n  <!-- this 1st div does a nice background color, and puts padding between this element and the footer-->\r\n  <div class=\"weather-background\">\r\n    <h1 style=\"padding-top: 1em; padding-bottom: 1em; color: #ffffff; font-size: 5em;\">Weather</h1>\r\n    <div class=\"center-content\">\r\n\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>City / Country / Region</th>\r\n            <th>Sun Rise / Sun Set</th>\r\n            <th>Weather Conditions</th>\r\n            <th>High / Low °C</th>\r\n            <th>°C</th>\r\n            <th>Wind Speed</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"cityWeather in cityWeathers\" :key=\"cityWeather.city\" >\r\n\r\n            <!-- 1 -->\r\n              <td><b><u>{{ cityWeather.city }}</u></b>\r\n                <br><br>\r\n                <template v-if=\"cityWeather.weather && cityWeather.weather.request[0].query\">\r\n\r\n                  <span>Country:</span>\r\n                  {{cityWeather.weather.nearest_area[0].country[0].value }}<br>\r\n                  <span \r\n                  >Region:\r\n                  </span> \r\n                  {{cityWeather.weather.nearest_area[0].region[0].value}}<br>\r\n                  {{ cityWeather.weather.request[0].query }}<br>\r\n                  <div style=\"margin-top: 0.25em;\"><br>\r\n                    <span style=\"color: rgb(123, 123, 123);\">Query Date:</span> {{\r\n                      cityWeather.weather.current_condition[0].observation_time }} -\r\n                    {{ formatDate(cityWeather.weather.weather[0].date) }}\r\n\r\n                  </div>\r\n                </template>\r\n              </td>\r\n\r\n\r\n              <!-- 2 -->\r\n              <td>\r\n                <template v-if=\"cityWeather.weather && cityWeather.weather.weather[0].astronomy[0].sunrise\">\r\n                  <span class=\"sunny-background\">{{ cityWeather.weather.weather[0].astronomy[0].sunrise }} - {{\r\n                    cityWeather.weather.weather[0].astronomy[0].sunset }}</span><br>\r\n                  Astronomical Sun Hours: <span class=\"sun-hour-background\">{{\r\n                    this.calculateDaylightTime(cityWeather.weather.weather[0].astronomy[0].sunrise,\r\n                      cityWeather.weather.weather[0].astronomy[0].sunset) }}</span><br>\r\n                  Estimated actual sun hours: <span class=\"sun-hour-background\">{{\r\n                    parseInt(cityWeather.weather.weather[0].sunHour) }} hours {{\r\n                    (Math.round((cityWeather.weather.weather[0].sunHour -\r\n                      parseInt(cityWeather.weather.weather[0].sunHour)) * 60) * 100) / 100 }} minutes</span>\r\n                </template>\r\n                <template v-else>\r\n                  N/A\r\n                </template>\r\n              </td>\r\n\r\n\r\n              <!-- 3 -->\r\n              <!-- This sets the table cell to have a different color background on a condition  -->\r\n              <td v-bind:class=\"{\r\n                'gray-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Partly cloudy',\r\n                'rain-showers-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Rain shower',\r\n                'overcast-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Overcast',\r\n                'cloudy-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Cloudy',\r\n                'sunny-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Sunny',\r\n                'light-rain-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Light rain',\r\n                'rain-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Rain',\r\n                'clear-background': cityWeather.weather && cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Clear'\r\n              }\">\r\n                <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0]\">\r\n                  <div v-if=\"cityWeather.weather.current_condition[0].weatherDesc[0].value == 'Partly cloudy'\">\r\n                    {{ cityWeather.weather.current_condition[0].weatherDesc[0].value }}\r\n                  </div>\r\n                  <div v-else>\r\n                    {{ cityWeather.weather.current_condition[0].weatherDesc[0].value }}\r\n                  </div>\r\n                </template>\r\n                <template v-else>\r\n                  N/A\r\n                </template>\r\n              </td>\r\n\r\n\r\n              <!-- 5 -->\r\n              <td>\r\n\r\n                <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0].temp_C\">\r\n                  \r\n                  {{formatDate(cityWeather.weather.weather[0].date)}}\r\n                \r\n                    <span class=\"high-temp-text-coloring\">{{ cityWeather.weather.weather[0].maxtempC }}°C\r\n                      {{ cityWeather.weather.weather[0].maxtempF }}°F</span>&nbsp;<span class=\"low-temp-text-coloring\">\r\n                        {{ cityWeather.weather.weather[0].mintempC }}°C\r\n                    {{ cityWeather.weather.weather[0].mintempF }}°F</span>\r\n                 \r\n\r\n                  <div>                    \r\n                      {{ formatDate(cityWeather.weather.weather[1].date) }}:\r\n                      <span class=\"high-temp-text-coloring\">{{ cityWeather.weather.weather[1].maxtempC }}°C&nbsp;{{\r\n                        cityWeather.weather.weather[1].maxtempF }}°F</span> <span class=\"low-temp-text-coloring\">{{\r\n                        cityWeather.weather.weather[1].mintempC }}°C</span><br>                    \r\n                  </div>\r\n                  \r\n                  <span>\r\n                    {{ formatDate(cityWeather.weather.weather[2].date) }}:\r\n                    <span class=\"high-temp-text-coloring\">{{ cityWeather.weather.weather[2].maxtempC }}°C&nbsp;{{\r\n                      cityWeather.weather.weather[2].maxtempF }}°F</span> <span class=\"low-temp-text-coloring\">{{\r\n                      cityWeather.weather.weather[2].mintempC }}°C</span><br>\r\n                  </span>\r\n\r\n\r\n                </template>\r\n                <template v-else>\r\n                  N/A\r\n                </template>\r\n              </td>\r\n\r\n              <!-- 6 -->\r\n              <td>\r\n                <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0]\">\r\n                  <div>\r\n                    Most recent:&nbsp;<b> {{ cityWeather.weather.current_condition[0].temp_C }}°C&nbsp;{{\r\n                      cityWeather.weather.current_condition[0].temp_F }}°F</b>\r\n                    Humidity: {{ cityWeather.weather.current_condition[0].humidity }}%<br>\r\n                  </div>\r\n                  Feels like:\r\n                  {{ cityWeather.weather.current_condition[0].FeelsLikeC }}°C\r\n                  {{ cityWeather.weather.current_condition[0].FeelsLikeF }}°F\r\n                  \r\n                </template>\r\n                \r\n                <template v-else>\r\n                  N/A\r\n                </template>\r\n              </td>\r\n              <!-- 7 -->\r\n              <td >\r\n                <template v-if=\"cityWeather.weather && cityWeather.weather.current_condition[0]\">\r\n                  {{ cityWeather.weather.current_condition[0].windspeedKmph }} km/h\r\n                </template>\r\n                <template v-else>\r\n                  N/A\r\n                </template>\r\n              </td>\r\n              <!-- 8 -->\r\n\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div style=\"padding-bottom: 9em; justify-content: center; display: flex; padding-left: 0.5em; padding-right: 0.5em;\">\r\n    <p style=\"text-align: left;\"> All the locations here are easily customizable! Data is queried as JSON\r\n      using <a class=\"text-links\" href=\"https://github.com/chubin/wttr.in\">https://github.com/chubin/wttr.in</a>,\r\n      then formatted and displayed here in a custom made table. This is just a simple project to fetch and format\r\n      customized data.\r\n    \r\n    </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cityWeathers: [\r\n        //{ city: \"Death Valley, CA\", weather: \"\" },\r\n        { city: \"Tübingen, Germany\", weather: \"\" },\r\n        { city: \"STR, Stuttgart Airport, Germany\", weather: \"\" },\r\n        { city: \"Cary, NC\", weather: \"\" },\r\n        //{ city: \"Wilmington, NC\", weather: \"\" },\r\n        //{ city: \"Albuquerque, New Mexico\", weather: \"\" },\r\n        //{ city: \"Shamokin, PA\", weather: \"\" },\r\n        //{ city: \"Temecula, CA\", weather: \"\" },\r\n        // { city: \"Albany WA, Australia\", weather: \"\" },\r\n        //{ city: \"RDU, Raleigh Durham Airport, USA\", weather: \"\" },\r\n        { city: \"Uppsala, Sweden\", weather: \"\" },\r\n        { city: \"Miami, Florida\", weather: \"\" },\r\n        //{ city: \"Madrid\", weather: \"\" },\r\n        //{ city: \"Helsinki\", weather: \"\" },\r\n\r\n      ],\r\n      jsonData: null,\r\n      regularText: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchWeather();\r\n  },\r\n  methods: {\r\n    fetchWeather() {\r\n      this.cityWeathers.forEach((cityWeather) => {\r\n        const url = `https://wttr.in/${cityWeather.city}?format=j1`;\r\n        //const regularURL = 'https://wttr.in/tuebingen'\r\n        fetch(url)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            cityWeather.weather = data;\r\n            this.jsonData = data;\r\n          })\r\n          .catch((error) => {\r\n            // error handling\r\n            this.jsonData = { data: { error: [{ msg: \"Unknown error occurred.\" + error }] } };\r\n          });\r\n\r\n        // optional regular text\r\n        /*\r\n        fetch(regularURL)\r\n        .then((response) => response.text())\r\n        .then((data3) => {\r\n         \r\n          this.regularText = data3;\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Error fetching weather for regularURL`, error);\r\n        });\r\n        */\r\n      });\r\n    },\r\n    calculateDaylightTime(startTime, endTime) {\r\n      const startDate = new Date(`2023/01/01 ${startTime}`);\r\n      const endDate = new Date(`2023/01/01 ${endTime}`);\r\n      const daylightTime = (endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60);\r\n      const hours = Math.floor(daylightTime);\r\n      const minutes = Math.floor((daylightTime - hours) * 60);\r\n      return `${hours} hours ${minutes} minutes`;\r\n    },\r\n    formatDate(convertDate) {\r\n      // const date takes string in format of 2021-05-18\r\n      const date = new Date(convertDate);\r\n      const options = { weekday: 'long', month: 'long', day: 'numeric' };\r\n      const formattedDate = date.toLocaleDateString('en-US', options);\r\n      return formattedDate;\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n/* The right padding forces it into the center */\r\n\r\n.weather-background {\r\n  background-image: url('../images/blue_sky2.jpg');\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  background-blend-mode: multiply;\r\n  background-attachment: fixed; \r\n}\r\n\r\ntable tbody tr td:nth-child(odd):not(:nth-child(3)) {  \r\n  background: rgb(255, 255, 255);\r\n}\r\n\r\ntable tbody tr td:nth-child(even) {\r\n  /* Styles for the second <span> element inside <td> elements */\r\n  background: rgb(250, 250, 250);\r\n}\r\n\r\ntable tbody tr td:nth-child(5) {\r\n  /* Styles for the second <span> element inside <td> elements */\r\n   \r\n    font-weight: 600;\r\n}\r\ntable tbody tr td:nth-child(1) {\r\n  /* Styles for the second <span> element inside <td> elements */\r\n \r\n}\r\n\r\n.center-content {\r\n  padding-left: 0.5em;\r\n  padding-right: 0.5em;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* Table */\r\ntable {\r\n  border-collapse: collapse;\r\n  margin-bottom: 1em;\r\n  border: none;\r\n}\r\n\r\n/* Table border radius with CSS only https://stackoverflow.com/questions/4932181/rounded-table-corners-css-only 3rd answer */\r\nth:first-of-type {\r\n  border-top-left-radius: 10px;\r\n}\r\n\r\nth:last-of-type {\r\n  border-top-right-radius: 10px;\r\n}\r\n\r\ntr:last-of-type td:first-of-type {\r\n  border-bottom-left-radius: 10px;\r\n\r\n}\r\n\r\ntr:last-of-type td:last-of-type {\r\n  border-bottom-right-radius: 10px;\r\n}\r\n\r\n/* Table Header */\r\nthead {\r\n  background-color: #ffffff;\r\n\r\n}\r\n\r\nth {\r\n  padding: 0.5em;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n  border-right: 1px solid #ddd;\r\n}\r\n\r\nth:last-child {\r\n  border-right: none;\r\n}\r\n\r\n.last-item {\r\n  border-bottom: none;\r\n}\r\n\r\n/* Table Body */\r\ntbody {\r\n  background-color: #ffffff;\r\n}\r\n\r\ntd {\r\n  text-align: left;\r\n\r\n\r\n  padding: 0.5em;\r\n}\r\n\r\n\r\n/* Alternate Row Color \r\ntr:nth-child(even) {\r\n  background-color: #ededed96;\r\n}\r\n*/\r\n\r\n.high-temp-text-coloring {\r\n  color: #000;\r\n  padding: 3px;\r\n  background-color: #ffbf00;\r\n  border-radius: 0.2em;\r\n}\r\n\r\n.low-temp-text-coloring {\r\n  color: #ffffff;\r\n  padding: 3px;\r\n  background-color: #255fff;\r\n  border-radius: 0.2em;\r\n}\r\n\r\n.feels-like-temperature-color {\r\n  background: rgb(206, 255, 206);\r\n  text-align: center;\r\n}\r\n\r\n.weather-location {\r\n  background: rgb(231, 250, 255);\r\n}\r\n\r\n.temperature-grid-weather {\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: 1fr;\r\n  grid-gap: 0em;\r\n}\r\n\r\n\r\n.gray-background {\r\n  background: linear-gradient(to left, #ffffff 50%, #e1e1e1 50%);\r\n}\r\n\r\n.rain-background {\r\n  background: #8aa9ff;\r\n}\r\n\r\n.rain-showers-background {\r\n  background: linear-gradient(to left, #ffffff 50%, #8aa9ff 50%);\r\n}\r\n\r\n.light-rain-background {\r\n  background: linear-gradient(to left, #ffffff 75%, #8aa9ff 25%);\r\n}\r\n\r\n.overcast-background {\r\n  background: #e1e1e1;\r\n}\r\n\r\n.cloudy-background {\r\n  background: #e1e1e1;\r\n}\r\n\r\n.sunny-background {\r\n  background: linear-gradient(to bottom, rgb(255, 255, 255) 50%, #b8f0ff 100%);\r\n\r\n  padding: 0.25em;\r\n}\r\n\r\n.clear-background {\r\n  background: #272727;\r\n  color: white;\r\n}\r\n\r\n.sun-hour-background {\r\n\r\n  text-decoration: underline;\r\n  padding: 0.1em;\r\n  border-radius: 0.3em;\r\n}\r\n\r\n\r\n@media (max-width: 768px) {\r\n\r\n  table {\r\n    font-size: 0.6em;\r\n    padding: 0.1em;\r\n  }\r\n\r\n\r\n\r\n}</style>","import { render } from \"./WeatherAPI.vue?vue&type=template&id=4a0e3bce&scoped=true\"\nimport script from \"./WeatherAPI.vue?vue&type=script&lang=js\"\nexport * from \"./WeatherAPI.vue?vue&type=script&lang=js\"\n\nimport \"./WeatherAPI.vue?vue&type=style&index=0&id=4a0e3bce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a0e3bce\"]])\n\nexport default __exports__","import { render } from \"./WeatherView.vue?vue&type=template&id=1a1821ec\"\nimport script from \"./WeatherView.vue?vue&type=script&lang=js\"\nexport * from \"./WeatherView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_WeatherAPI","class","_createElementVNode","style","key","_createTextVNode","href","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","cityWeathers","cityWeather","city","_toDisplayString","_hoisted_5","_hoisted_6","weather","request","query","_hoisted_7","nearest_area","country","value","_hoisted_8","_hoisted_9","region","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","current_condition","observation_time","$options","formatDate","date","_createCommentVNode","astronomy","sunrise","_hoisted_15","sunset","_hoisted_16","_hoisted_17","calculateDaylightTime","_hoisted_18","_hoisted_19","parseInt","sunHour","Math","round","_normalizeClass","weatherDesc","_hoisted_20","_hoisted_21","temp_C","_hoisted_22","maxtempC","maxtempF","_hoisted_23","mintempC","mintempF","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","temp_F","humidity","_hoisted_30","FeelsLikeC","FeelsLikeF","windspeedKmph","_hoisted_31","data","jsonData","regularText","mounted","this","fetchWeather","methods","forEach","url","fetch","then","response","json","catch","error","msg","startTime","endTime","startDate","Date","endDate","daylightTime","getTime","hours","floor","minutes","convertDate","options","weekday","month","day","formattedDate","toLocaleDateString","__exports__","name","components","WeatherAPI","render"],"sourceRoot":""}